function [exitV,exitVec,M] = ProblemeP2A1()
    M = zeros(150,150);
    exitV = zeros(20,0);
    exitVec = zer
    for i=1:150
        if (not(... % si c'est pas un bord :
            i<10 || i > 140 ...     % gestion des bords gauche et droits
            || mod(i-1,10) == 0 ... % gestion des bords bas
            || mod(i,10) == 0 ...   % gestion du bors haut
            || (i>61 && i<66) ...   % gestion du trou
            || (i>71 && i<76) || (i>81 && i<86)) )
            M(i,i) = -4;
            M(i,i-10) = 1;
            M(i,i+10) = 1;
            M(i,i+1) = 1;
            M(i,i-1) = 1;
        else
            M(i,i) = 1;
        end
    end
    [v,vecteurs] = ValeurPropre(inv(-M),0.0001);
    
    %Récuperer les premiers vecteurs non =-1
    pos = 1;
    for i=1:10
        if v(pos) > 0
            exitV(i) = 1/v(pos);
            exitVec(i) = vecteurs(pos);
        end
        pos = pos + 1;
    end
    
    surf(reshape(vecteurs(:,2),10,15));
    
    % TODO FAIRE METHODE ITERATIOSN INVERSE POUR AVOIR UNE REPRESENTATION
    % CORRECTE DE LA REPARTITION DES ONDES
    v = v';
end